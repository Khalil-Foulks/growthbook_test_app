{"version":3,"file":"dom-mutator.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["export const validAttributeName = /^[a-zA-Z:_][a-zA-Z0-9:_.-]*$/;\nconst nullController: MutationController = {\n  revert: () => {},\n};\n\nconst elements: Map<Element, ElementRecord> = new Map();\nconst mutations: Set<Mutation> = new Set();\n\nfunction getObserverInit(attr: string): MutationObserverInit {\n  return attr === 'html'\n    ? {\n        childList: true,\n        subtree: true,\n        attributes: true,\n        characterData: true,\n      }\n    : {\n        childList: false,\n        subtree: false,\n        attributes: true,\n        attributeFilter: [attr],\n      };\n}\n\nfunction getElementRecord(element: Element): ElementRecord {\n  let record = elements.get(element);\n\n  if (!record) {\n    record = { element, attributes: {} };\n    elements.set(element, record);\n  }\n\n  return record;\n}\n\nfunction createElementPropertyRecord(\n  el: Element,\n  attr: string,\n  getCurrentValue: (el: Element) => any,\n  setValue: (el: Element, val: any) => void,\n  mutationRunner: (record: ElementPropertyRecord<any, any>) => void\n) {\n  const currentValue = getCurrentValue(el);\n  const record: ElementPropertyRecord<any, any> = {\n    isDirty: false,\n    originalValue: currentValue,\n    virtualValue: currentValue,\n    mutations: [],\n    el,\n    observer: new MutationObserver(() => {\n      const currentValue = getCurrentValue(el);\n      if (currentValue === record.virtualValue) return;\n      record.originalValue = currentValue;\n      mutationRunner(record);\n    }),\n    mutationRunner,\n    setValue,\n    getCurrentValue,\n  };\n  record.observer.observe(el, getObserverInit(attr));\n  return record;\n}\n\nfunction queueIfNeeded(\n  val: string | null | ElementPositionWithDomNode,\n  record: ElementPropertyRecord<any, any>\n) {\n  const currentVal = record.getCurrentValue(record.el);\n  record.virtualValue = val;\n  if (val && typeof val !== 'string') {\n    if (\n      !currentVal ||\n      val.parentNode !== currentVal.parentNode ||\n      val.insertBeforeNode !== currentVal.insertBeforeNode\n    ) {\n      record.isDirty = true;\n      queueDOMUpdates();\n    }\n  } else if (val !== currentVal) {\n    record.isDirty = true;\n    queueDOMUpdates();\n  }\n}\n\nfunction htmlMutationRunner(record: HTMLRecord) {\n  let val = record.originalValue;\n  record.mutations.forEach(m => (val = m.mutate(val)));\n  queueIfNeeded(getTransformedHTML(val), record);\n}\nfunction classMutationRunner(record: ClassnameRecord) {\n  const val = new Set(record.originalValue.split(/\\s+/).filter(Boolean));\n  record.mutations.forEach(m => m.mutate(val));\n  queueIfNeeded(\n    Array.from(val)\n      .filter(Boolean)\n      .join(' '),\n    record\n  );\n}\n\nfunction attrMutationRunner(record: AttributeRecord) {\n  let val: string | null = record.originalValue;\n  record.mutations.forEach(m => (val = m.mutate(val)));\n  queueIfNeeded(val, record);\n}\n\nfunction _loadDOMNodes({\n  parentSelector,\n  insertBeforeSelector,\n}: ElementPosition): ElementPositionWithDomNode | null {\n  const parentNode = document.querySelector<HTMLElement>(parentSelector);\n  if (!parentNode) return null;\n  const insertBeforeNode = insertBeforeSelector\n    ? document.querySelector<HTMLElement>(insertBeforeSelector)\n    : null;\n  if (insertBeforeSelector && !insertBeforeNode) return null;\n  return {\n    parentNode,\n    insertBeforeNode,\n  };\n}\n\nfunction positionMutationRunner(record: PositionRecord) {\n  let val = record.originalValue;\n  record.mutations.forEach(m => {\n    const selectors = m.mutate();\n    const newNodes = _loadDOMNodes(selectors);\n    val = newNodes || val;\n  });\n  queueIfNeeded(val, record);\n}\n\nconst getHTMLValue = (el: Element) => el.innerHTML;\nconst setHTMLValue = (el: Element, value: string) => (el.innerHTML = value);\nfunction getElementHTMLRecord(element: Element): HTMLRecord {\n  const elementRecord = getElementRecord(element);\n  if (!elementRecord.html) {\n    elementRecord.html = createElementPropertyRecord(\n      element,\n      'html',\n      getHTMLValue,\n      setHTMLValue,\n      htmlMutationRunner\n    );\n  }\n  return elementRecord.html;\n}\n\nconst getElementPosition = (el: Element): ElementPositionWithDomNode => {\n  return {\n    parentNode: el.parentElement as HTMLElement,\n    insertBeforeNode: el.nextElementSibling as HTMLElement | null,\n  };\n};\nconst setElementPosition = (el: Element, value: ElementPositionWithDomNode) => {\n  value.parentNode.insertBefore(el, value.insertBeforeNode);\n};\nfunction getElementPositionRecord(element: Element): PositionRecord {\n  const elementRecord = getElementRecord(element);\n  if (!elementRecord.position) {\n    elementRecord.position = createElementPropertyRecord(\n      element,\n      'position',\n      getElementPosition,\n      setElementPosition,\n      positionMutationRunner\n    );\n  }\n  return elementRecord.position;\n}\n\nconst setClassValue = (el: Element, val: string) =>\n  val ? (el.className = val) : el.removeAttribute('class');\nconst getClassValue = (el: Element) => el.className;\nfunction getElementClassRecord(el: Element): ClassnameRecord {\n  const elementRecord = getElementRecord(el);\n  if (!elementRecord.classes) {\n    elementRecord.classes = createElementPropertyRecord(\n      el,\n      'class',\n      getClassValue,\n      setClassValue,\n      classMutationRunner\n    );\n  }\n  return elementRecord.classes;\n}\n\nconst getAttrValue = (attrName: string) => (el: Element) =>\n  el.getAttribute(attrName) ?? null;\nconst setAttrValue = (attrName: string) => (el: Element, val: string | null) =>\n  val !== null ? el.setAttribute(attrName, val) : el.removeAttribute(attrName);\nfunction getElementAttributeRecord(el: Element, attr: string): AttributeRecord {\n  const elementRecord = getElementRecord(el);\n  if (!elementRecord.attributes[attr]) {\n    elementRecord.attributes[attr] = createElementPropertyRecord(\n      el,\n      attr,\n      getAttrValue(attr),\n      setAttrValue(attr),\n      attrMutationRunner\n    );\n  }\n  return elementRecord.attributes[attr];\n}\n\nfunction deleteElementPropertyRecord(el: Element, attr: string) {\n  const element = elements.get(el);\n  if (!element) return;\n  if (attr === 'html') {\n    element.html?.observer?.disconnect();\n    delete element.html;\n  } else if (attr === 'class') {\n    element.classes?.observer?.disconnect();\n    delete element.classes;\n  } else if (attr === 'position') {\n    element.position?.observer?.disconnect();\n    delete element.position;\n  } else {\n    element.attributes?.[attr]?.observer?.disconnect();\n    delete element.attributes[attr];\n  }\n}\n\nlet transformContainer: HTMLDivElement;\nfunction getTransformedHTML(html: string) {\n  if (!transformContainer) {\n    transformContainer = document.createElement('div');\n  }\n  transformContainer.innerHTML = html;\n  return transformContainer.innerHTML;\n}\n\nfunction setPropertyValue<T extends ElementPropertyRecord<any, any>>(\n  el: Element,\n  attr: string,\n  m: T\n) {\n  if (!m.isDirty) return;\n  m.isDirty = false;\n  const val = m.virtualValue;\n  if (!m.mutations.length) {\n    deleteElementPropertyRecord(el, attr);\n  }\n  m.setValue(el, val);\n}\n\nlet raf = false;\n\nfunction setValue(m: ElementRecord, el: Element) {\n  m.html && setPropertyValue<HTMLRecord>(el, 'html', m.html);\n  m.classes && setPropertyValue<ClassnameRecord>(el, 'class', m.classes);\n  m.position && setPropertyValue<PositionRecord>(el, 'position', m.position);\n  Object.keys(m.attributes).forEach(attr => {\n    setPropertyValue<AttributeRecord>(el, attr, m.attributes[attr]);\n  });\n}\nfunction setValues() {\n  raf = false;\n  elements.forEach(setValue);\n}\nfunction queueDOMUpdates() {\n  if (!raf) {\n    raf = true;\n    requestAnimationFrame(setValues);\n  }\n}\n\n// find or create ElementPropertyRecord, add mutation to it, then run\nfunction startMutating(mutation: Mutation, element: Element) {\n  let record: ElementPropertyRecord<any, any> | null = null;\n  if (mutation.kind === 'html') {\n    record = getElementHTMLRecord(element);\n  } else if (mutation.kind === 'class') {\n    record = getElementClassRecord(element);\n  } else if (mutation.kind === 'attribute') {\n    record = getElementAttributeRecord(element, mutation.attribute);\n  } else if (mutation.kind === 'position') {\n    record = getElementPositionRecord(element);\n  }\n  if (!record) return;\n  record.mutations.push(mutation);\n  record.mutationRunner(record);\n}\n\n// get (existing) ElementPropertyRecord, remove mutation from it, then run\nfunction stopMutating(mutation: Mutation, el: Element) {\n  let record: ElementPropertyRecord<any, any> | null = null;\n  if (mutation.kind === 'html') {\n    record = getElementHTMLRecord(el);\n  } else if (mutation.kind === 'class') {\n    record = getElementClassRecord(el);\n  } else if (mutation.kind === 'attribute') {\n    record = getElementAttributeRecord(el, mutation.attribute);\n  } else if (mutation.kind === 'position') {\n    record = getElementPositionRecord(el);\n  }\n  if (!record) return;\n  const index = record.mutations.indexOf(mutation);\n  if (index !== -1) record.mutations.splice(index, 1);\n  record.mutationRunner(record);\n}\n\n// maintain list of elements associated with mutation\nfunction refreshElementsSet(mutation: Mutation) {\n  const existingElements = new Set(mutation.elements);\n  const newElements: Set<Element> = new Set();\n  const matchingElements = document.querySelectorAll(mutation.selector);\n\n  matchingElements.forEach(el => {\n    newElements.add(el);\n    if (!existingElements.has(el)) {\n      mutation.elements.add(el);\n      startMutating(mutation, el);\n    }\n  });\n\n  existingElements.forEach(el => {\n    if (!newElements.has(el)) {\n      mutation.elements.delete(el);\n      stopMutating(mutation, el);\n    }\n  });\n}\n\nfunction revertMutation(mutation: Mutation) {\n  mutation.elements.forEach(el => stopMutating(mutation, el));\n  mutation.elements.clear();\n  mutations.delete(mutation);\n}\n\nfunction refreshAllElementSets() {\n  mutations.forEach(refreshElementsSet);\n}\n\n// Observer for elements that don't exist in the DOM yet\nlet observer: MutationObserver;\nexport function disconnectGlobalObserver() {\n  observer && observer.disconnect();\n}\nexport function connectGlobalObserver() {\n  if (typeof document === 'undefined') return;\n\n  if (!observer) {\n    observer = new MutationObserver(() => {\n      refreshAllElementSets();\n    });\n  }\n\n  refreshAllElementSets();\n  observer.observe(document.documentElement, {\n    childList: true,\n    subtree: true,\n    attributes: false,\n    characterData: false,\n  });\n}\n\n// run on init\nconnectGlobalObserver();\n\nfunction newMutation(m: Mutation): MutationController {\n  // Not in a browser\n  if (typeof document === 'undefined') return nullController;\n  // add to global index of mutations\n  mutations.add(m);\n  // run refresh on init to establish list of elements associated w/ mutation\n  refreshElementsSet(m);\n  return {\n    revert: () => {\n      revertMutation(m);\n    },\n  };\n}\n\nfunction html(\n  selector: HTMLMutation['selector'],\n  mutate: HTMLMutation['mutate']\n) {\n  return newMutation({\n    kind: 'html',\n    elements: new Set(),\n    mutate,\n    selector,\n  });\n}\n\nfunction position(\n  selector: PositionMutation['selector'],\n  mutate: PositionMutation['mutate']\n) {\n  return newMutation({\n    kind: 'position',\n    elements: new Set(),\n    mutate,\n    selector,\n  });\n}\n\nfunction classes(\n  selector: ClassnameMutation['selector'],\n  mutate: ClassnameMutation['mutate']\n) {\n  return newMutation({\n    kind: 'class',\n    elements: new Set(),\n    mutate,\n    selector,\n  });\n}\n\nfunction attribute(\n  selector: AttrMutation['selector'],\n  attribute: AttrMutation['attribute'],\n  mutate: AttrMutation['mutate']\n) {\n  if (!validAttributeName.test(attribute)) return nullController;\n\n  if (attribute === 'class' || attribute === 'className') {\n    return classes(selector, classnames => {\n      const mutatedClassnames = mutate(Array.from(classnames).join(' '));\n      classnames.clear();\n      if (!mutatedClassnames) return;\n      mutatedClassnames\n        .split(/\\s+/g)\n        .filter(Boolean)\n        .forEach(c => classnames.add(c));\n    });\n  }\n\n  return newMutation({\n    kind: 'attribute',\n    attribute,\n    elements: new Set(),\n    mutate,\n    selector,\n  });\n}\n\nfunction declarative({\n  selector,\n  action,\n  value,\n  attribute: attr,\n  parentSelector,\n  insertBeforeSelector,\n}: DeclarativeMutation): MutationController {\n  if (attr === 'html') {\n    if (action === 'append') {\n      return html(selector, val => val + (value ?? ''));\n    } else if (action === 'set') {\n      return html(selector, () => value ?? '');\n    }\n  } else if (attr === 'class') {\n    if (action === 'append') {\n      return classes(selector, val => {\n        if (value) val.add(value);\n      });\n    } else if (action === 'remove') {\n      return classes(selector, val => {\n        if (value) val.delete(value);\n      });\n    } else if (action === 'set') {\n      return classes(selector, val => {\n        val.clear();\n        if (value) val.add(value);\n      });\n    }\n  } else if (attr === 'position') {\n    if (action === 'set' && parentSelector) {\n      return position(selector, () => ({\n        insertBeforeSelector,\n        parentSelector,\n      }));\n    }\n  } else {\n    if (action === 'append') {\n      return attribute(selector, attr, val =>\n        val !== null ? val + (value ?? '') : value ?? ''\n      );\n    } else if (action === 'set') {\n      return attribute(selector, attr, () => value ?? '');\n    } else if (action === 'remove') {\n      return attribute(selector, attr, () => null);\n    }\n  }\n  return nullController;\n}\n\nexport type MutationController = {\n  revert: () => void;\n};\n\nexport type DeclarativeMutation = {\n  selector: string;\n  attribute: string;\n  action: 'append' | 'set' | 'remove';\n  value?: string;\n  parentSelector?: string;\n  insertBeforeSelector?: string;\n};\n\nexport default {\n  html,\n  classes,\n  attribute,\n  position,\n  declarative,\n};\n"],"names":["validAttributeName","nullController","revert","elements","Map","mutations","Set","getObserverInit","attr","childList","subtree","attributes","characterData","attributeFilter","getElementRecord","element","record","get","set","createElementPropertyRecord","el","getCurrentValue","setValue","mutationRunner","currentValue","isDirty","originalValue","virtualValue","observer","MutationObserver","observe","queueIfNeeded","val","currentVal","parentNode","insertBeforeNode","queueDOMUpdates","htmlMutationRunner","forEach","m","mutate","getTransformedHTML","classMutationRunner","split","filter","Boolean","Array","from","join","attrMutationRunner","_loadDOMNodes","parentSelector","insertBeforeSelector","document","querySelector","positionMutationRunner","selectors","newNodes","getHTMLValue","innerHTML","setHTMLValue","value","getElementHTMLRecord","elementRecord","html","getElementPosition","parentElement","nextElementSibling","setElementPosition","insertBefore","getElementPositionRecord","position","setClassValue","className","removeAttribute","getClassValue","getElementClassRecord","classes","getAttrValue","attrName","getAttribute","setAttrValue","setAttribute","getElementAttributeRecord","deleteElementPropertyRecord","disconnect","transformContainer","createElement","setPropertyValue","length","raf","Object","keys","setValues","requestAnimationFrame","startMutating","mutation","kind","attribute","push","stopMutating","index","indexOf","splice","refreshElementsSet","existingElements","newElements","matchingElements","querySelectorAll","selector","add","has","revertMutation","clear","refreshAllElementSets","disconnectGlobalObserver","connectGlobalObserver","documentElement","newMutation","test","classnames","mutatedClassnames","c","declarative","action"],"mappings":";;;;IAAaA,kBAAkB,GAAG;AAClC,IAAMC,cAAc,GAAuB;AACzCC,EAAAA,MAAM,EAAE;AADiC,CAA3C;AAIA,IAAMC,QAAQ,gBAAgC,IAAIC,GAAJ,EAA9C;AACA,IAAMC,SAAS,gBAAkB,IAAIC,GAAJ,EAAjC;;AAEA,SAASC,eAAT,CAAyBC,IAAzB;AACE,SAAOA,IAAI,KAAK,MAAT,GACH;AACEC,IAAAA,SAAS,EAAE,IADb;AAEEC,IAAAA,OAAO,EAAE,IAFX;AAGEC,IAAAA,UAAU,EAAE,IAHd;AAIEC,IAAAA,aAAa,EAAE;AAJjB,GADG,GAOH;AACEH,IAAAA,SAAS,EAAE,KADb;AAEEC,IAAAA,OAAO,EAAE,KAFX;AAGEC,IAAAA,UAAU,EAAE,IAHd;AAIEE,IAAAA,eAAe,EAAE,CAACL,IAAD;AAJnB,GAPJ;AAaD;;AAED,SAASM,gBAAT,CAA0BC,OAA1B;AACE,MAAIC,MAAM,GAAGb,QAAQ,CAACc,GAAT,CAAaF,OAAb,CAAb;;AAEA,MAAI,CAACC,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAG;AAAED,MAAAA,OAAO,EAAPA,OAAF;AAAWJ,MAAAA,UAAU,EAAE;AAAvB,KAAT;AACAR,IAAAA,QAAQ,CAACe,GAAT,CAAaH,OAAb,EAAsBC,MAAtB;AACD;;AAED,SAAOA,MAAP;AACD;;AAED,SAASG,2BAAT,CACEC,EADF,EAEEZ,IAFF,EAGEa,eAHF,EAIEC,QAJF,EAKEC,cALF;AAOE,MAAMC,YAAY,GAAGH,eAAe,CAACD,EAAD,CAApC;AACA,MAAMJ,MAAM,GAAoC;AAC9CS,IAAAA,OAAO,EAAE,KADqC;AAE9CC,IAAAA,aAAa,EAAEF,YAF+B;AAG9CG,IAAAA,YAAY,EAAEH,YAHgC;AAI9CnB,IAAAA,SAAS,EAAE,EAJmC;AAK9Ce,IAAAA,EAAE,EAAFA,EAL8C;AAM9CQ,IAAAA,QAAQ,EAAE,IAAIC,gBAAJ,CAAqB;AAC7B,UAAML,YAAY,GAAGH,eAAe,CAACD,EAAD,CAApC;AACA,UAAII,YAAY,KAAKR,MAAM,CAACW,YAA5B,EAA0C;AAC1CX,MAAAA,MAAM,CAACU,aAAP,GAAuBF,YAAvB;AACAD,MAAAA,cAAc,CAACP,MAAD,CAAd;AACD,KALS,CANoC;AAY9CO,IAAAA,cAAc,EAAdA,cAZ8C;AAa9CD,IAAAA,QAAQ,EAARA,QAb8C;AAc9CD,IAAAA,eAAe,EAAfA;AAd8C,GAAhD;AAgBAL,EAAAA,MAAM,CAACY,QAAP,CAAgBE,OAAhB,CAAwBV,EAAxB,EAA4Bb,eAAe,CAACC,IAAD,CAA3C;AACA,SAAOQ,MAAP;AACD;;AAED,SAASe,aAAT,CACEC,GADF,EAEEhB,MAFF;AAIE,MAAMiB,UAAU,GAAGjB,MAAM,CAACK,eAAP,CAAuBL,MAAM,CAACI,EAA9B,CAAnB;AACAJ,EAAAA,MAAM,CAACW,YAAP,GAAsBK,GAAtB;;AACA,MAAIA,GAAG,IAAI,OAAOA,GAAP,KAAe,QAA1B,EAAoC;AAClC,QACE,CAACC,UAAD,IACAD,GAAG,CAACE,UAAJ,KAAmBD,UAAU,CAACC,UAD9B,IAEAF,GAAG,CAACG,gBAAJ,KAAyBF,UAAU,CAACE,gBAHtC,EAIE;AACAnB,MAAAA,MAAM,CAACS,OAAP,GAAiB,IAAjB;AACAW,MAAAA,eAAe;AAChB;AACF,GATD,MASO,IAAIJ,GAAG,KAAKC,UAAZ,EAAwB;AAC7BjB,IAAAA,MAAM,CAACS,OAAP,GAAiB,IAAjB;AACAW,IAAAA,eAAe;AAChB;AACF;;AAED,SAASC,kBAAT,CAA4BrB,MAA5B;AACE,MAAIgB,GAAG,GAAGhB,MAAM,CAACU,aAAjB;AACAV,EAAAA,MAAM,CAACX,SAAP,CAAiBiC,OAAjB,CAAyB,UAAAC,CAAC;AAAA,WAAKP,GAAG,GAAGO,CAAC,CAACC,MAAF,CAASR,GAAT,CAAX;AAAA,GAA1B;AACAD,EAAAA,aAAa,CAACU,kBAAkB,CAACT,GAAD,CAAnB,EAA0BhB,MAA1B,CAAb;AACD;;AACD,SAAS0B,mBAAT,CAA6B1B,MAA7B;AACE,MAAMgB,GAAG,GAAG,IAAI1B,GAAJ,CAAQU,MAAM,CAACU,aAAP,CAAqBiB,KAArB,CAA2B,KAA3B,EAAkCC,MAAlC,CAAyCC,OAAzC,CAAR,CAAZ;AACA7B,EAAAA,MAAM,CAACX,SAAP,CAAiBiC,OAAjB,CAAyB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,MAAF,CAASR,GAAT,CAAJ;AAAA,GAA1B;AACAD,EAAAA,aAAa,CACXe,KAAK,CAACC,IAAN,CAAWf,GAAX,EACGY,MADH,CACUC,OADV,EAEGG,IAFH,CAEQ,GAFR,CADW,EAIXhC,MAJW,CAAb;AAMD;;AAED,SAASiC,kBAAT,CAA4BjC,MAA5B;AACE,MAAIgB,GAAG,GAAkBhB,MAAM,CAACU,aAAhC;AACAV,EAAAA,MAAM,CAACX,SAAP,CAAiBiC,OAAjB,CAAyB,UAAAC,CAAC;AAAA,WAAKP,GAAG,GAAGO,CAAC,CAACC,MAAF,CAASR,GAAT,CAAX;AAAA,GAA1B;AACAD,EAAAA,aAAa,CAACC,GAAD,EAAMhB,MAAN,CAAb;AACD;;AAED,SAASkC,aAAT;MACEC,sBAAAA;MACAC,4BAAAA;AAEA,MAAMlB,UAAU,GAAGmB,QAAQ,CAACC,aAAT,CAAoCH,cAApC,CAAnB;AACA,MAAI,CAACjB,UAAL,EAAiB,OAAO,IAAP;AACjB,MAAMC,gBAAgB,GAAGiB,oBAAoB,GACzCC,QAAQ,CAACC,aAAT,CAAoCF,oBAApC,CADyC,GAEzC,IAFJ;AAGA,MAAIA,oBAAoB,IAAI,CAACjB,gBAA7B,EAA+C,OAAO,IAAP;AAC/C,SAAO;AACLD,IAAAA,UAAU,EAAVA,UADK;AAELC,IAAAA,gBAAgB,EAAhBA;AAFK,GAAP;AAID;;AAED,SAASoB,sBAAT,CAAgCvC,MAAhC;AACE,MAAIgB,GAAG,GAAGhB,MAAM,CAACU,aAAjB;AACAV,EAAAA,MAAM,CAACX,SAAP,CAAiBiC,OAAjB,CAAyB,UAAAC,CAAC;AACxB,QAAMiB,SAAS,GAAGjB,CAAC,CAACC,MAAF,EAAlB;;AACA,QAAMiB,QAAQ,GAAGP,aAAa,CAACM,SAAD,CAA9B;;AACAxB,IAAAA,GAAG,GAAGyB,QAAQ,IAAIzB,GAAlB;AACD,GAJD;AAKAD,EAAAA,aAAa,CAACC,GAAD,EAAMhB,MAAN,CAAb;AACD;;AAED,IAAM0C,YAAY,GAAG,SAAfA,YAAe,CAACtC,EAAD;AAAA,SAAiBA,EAAE,CAACuC,SAApB;AAAA,CAArB;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACxC,EAAD,EAAcyC,KAAd;AAAA,SAAiCzC,EAAE,CAACuC,SAAH,GAAeE,KAAhD;AAAA,CAArB;;AACA,SAASC,oBAAT,CAA8B/C,OAA9B;AACE,MAAMgD,aAAa,GAAGjD,gBAAgB,CAACC,OAAD,CAAtC;;AACA,MAAI,CAACgD,aAAa,CAACC,IAAnB,EAAyB;AACvBD,IAAAA,aAAa,CAACC,IAAd,GAAqB7C,2BAA2B,CAC9CJ,OAD8C,EAE9C,MAF8C,EAG9C2C,YAH8C,EAI9CE,YAJ8C,EAK9CvB,kBAL8C,CAAhD;AAOD;;AACD,SAAO0B,aAAa,CAACC,IAArB;AACD;;AAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAC7C,EAAD;AACzB,SAAO;AACLc,IAAAA,UAAU,EAAEd,EAAE,CAAC8C,aADV;AAEL/B,IAAAA,gBAAgB,EAAEf,EAAE,CAAC+C;AAFhB,GAAP;AAID,CALD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAChD,EAAD,EAAcyC,KAAd;AACzBA,EAAAA,KAAK,CAAC3B,UAAN,CAAiBmC,YAAjB,CAA8BjD,EAA9B,EAAkCyC,KAAK,CAAC1B,gBAAxC;AACD,CAFD;;AAGA,SAASmC,wBAAT,CAAkCvD,OAAlC;AACE,MAAMgD,aAAa,GAAGjD,gBAAgB,CAACC,OAAD,CAAtC;;AACA,MAAI,CAACgD,aAAa,CAACQ,QAAnB,EAA6B;AAC3BR,IAAAA,aAAa,CAACQ,QAAd,GAAyBpD,2BAA2B,CAClDJ,OADkD,EAElD,UAFkD,EAGlDkD,kBAHkD,EAIlDG,kBAJkD,EAKlDb,sBALkD,CAApD;AAOD;;AACD,SAAOQ,aAAa,CAACQ,QAArB;AACD;;AAED,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACpD,EAAD,EAAcY,GAAd;AAAA,SACpBA,GAAG,GAAIZ,EAAE,CAACqD,SAAH,GAAezC,GAAnB,GAA0BZ,EAAE,CAACsD,eAAH,CAAmB,OAAnB,CADT;AAAA,CAAtB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACvD,EAAD;AAAA,SAAiBA,EAAE,CAACqD,SAApB;AAAA,CAAtB;;AACA,SAASG,qBAAT,CAA+BxD,EAA/B;AACE,MAAM2C,aAAa,GAAGjD,gBAAgB,CAACM,EAAD,CAAtC;;AACA,MAAI,CAAC2C,aAAa,CAACc,OAAnB,EAA4B;AAC1Bd,IAAAA,aAAa,CAACc,OAAd,GAAwB1D,2BAA2B,CACjDC,EADiD,EAEjD,OAFiD,EAGjDuD,aAHiD,EAIjDH,aAJiD,EAKjD9B,mBALiD,CAAnD;AAOD;;AACD,SAAOqB,aAAa,CAACc,OAArB;AACD;;AAED,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD;AAAA,SAAsB,UAAC3D,EAAD;AAAA;;AAAA,+BACzCA,EAAE,CAAC4D,YAAH,CAAgBD,QAAhB,CADyC,+BACZ,IADY;AAAA,GAAtB;AAAA,CAArB;;AAEA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACF,QAAD;AAAA,SAAsB,UAAC3D,EAAD,EAAcY,GAAd;AAAA,WACzCA,GAAG,KAAK,IAAR,GAAeZ,EAAE,CAAC8D,YAAH,CAAgBH,QAAhB,EAA0B/C,GAA1B,CAAf,GAAgDZ,EAAE,CAACsD,eAAH,CAAmBK,QAAnB,CADP;AAAA,GAAtB;AAAA,CAArB;;AAEA,SAASI,yBAAT,CAAmC/D,EAAnC,EAAgDZ,IAAhD;AACE,MAAMuD,aAAa,GAAGjD,gBAAgB,CAACM,EAAD,CAAtC;;AACA,MAAI,CAAC2C,aAAa,CAACpD,UAAd,CAAyBH,IAAzB,CAAL,EAAqC;AACnCuD,IAAAA,aAAa,CAACpD,UAAd,CAAyBH,IAAzB,IAAiCW,2BAA2B,CAC1DC,EAD0D,EAE1DZ,IAF0D,EAG1DsE,YAAY,CAACtE,IAAD,CAH8C,EAI1DyE,YAAY,CAACzE,IAAD,CAJ8C,EAK1DyC,kBAL0D,CAA5D;AAOD;;AACD,SAAOc,aAAa,CAACpD,UAAd,CAAyBH,IAAzB,CAAP;AACD;;AAED,SAAS4E,2BAAT,CAAqChE,EAArC,EAAkDZ,IAAlD;AACE,MAAMO,OAAO,GAAGZ,QAAQ,CAACc,GAAT,CAAaG,EAAb,CAAhB;AACA,MAAI,CAACL,OAAL,EAAc;;AACd,MAAIP,IAAI,KAAK,MAAb,EAAqB;AAAA;;AACnB,qBAAAO,OAAO,CAACiD,IAAR,4DAAcpC,QAAd,2CAAwByD,UAAxB;AACA,WAAOtE,OAAO,CAACiD,IAAf;AACD,GAHD,MAGO,IAAIxD,IAAI,KAAK,OAAb,EAAsB;AAAA;;AAC3B,wBAAAO,OAAO,CAAC8D,OAAR,+DAAiBjD,QAAjB,2CAA2ByD,UAA3B;AACA,WAAOtE,OAAO,CAAC8D,OAAf;AACD,GAHM,MAGA,IAAIrE,IAAI,KAAK,UAAb,EAAyB;AAAA;;AAC9B,yBAAAO,OAAO,CAACwD,QAAR,gEAAkB3C,QAAlB,2CAA4ByD,UAA5B;AACA,WAAOtE,OAAO,CAACwD,QAAf;AACD,GAHM,MAGA;AAAA;;AACL,2BAAAxD,OAAO,CAACJ,UAAR,kEAAqBH,IAArB,sEAA4BoB,QAA5B,4CAAsCyD,UAAtC;AACA,WAAOtE,OAAO,CAACJ,UAAR,CAAmBH,IAAnB,CAAP;AACD;AACF;;AAED,IAAI8E,kBAAJ;;AACA,SAAS7C,kBAAT,CAA4BuB,IAA5B;AACE,MAAI,CAACsB,kBAAL,EAAyB;AACvBA,IAAAA,kBAAkB,GAAGjC,QAAQ,CAACkC,aAAT,CAAuB,KAAvB,CAArB;AACD;;AACDD,EAAAA,kBAAkB,CAAC3B,SAAnB,GAA+BK,IAA/B;AACA,SAAOsB,kBAAkB,CAAC3B,SAA1B;AACD;;AAED,SAAS6B,gBAAT,CACEpE,EADF,EAEEZ,IAFF,EAGE+B,CAHF;AAKE,MAAI,CAACA,CAAC,CAACd,OAAP,EAAgB;AAChBc,EAAAA,CAAC,CAACd,OAAF,GAAY,KAAZ;AACA,MAAMO,GAAG,GAAGO,CAAC,CAACZ,YAAd;;AACA,MAAI,CAACY,CAAC,CAAClC,SAAF,CAAYoF,MAAjB,EAAyB;AACvBL,IAAAA,2BAA2B,CAAChE,EAAD,EAAKZ,IAAL,CAA3B;AACD;;AACD+B,EAAAA,CAAC,CAACjB,QAAF,CAAWF,EAAX,EAAeY,GAAf;AACD;;AAED,IAAI0D,GAAG,GAAG,KAAV;;AAEA,SAASpE,QAAT,CAAkBiB,CAAlB,EAAoCnB,EAApC;AACEmB,EAAAA,CAAC,CAACyB,IAAF,IAAUwB,gBAAgB,CAAapE,EAAb,EAAiB,MAAjB,EAAyBmB,CAAC,CAACyB,IAA3B,CAA1B;AACAzB,EAAAA,CAAC,CAACsC,OAAF,IAAaW,gBAAgB,CAAkBpE,EAAlB,EAAsB,OAAtB,EAA+BmB,CAAC,CAACsC,OAAjC,CAA7B;AACAtC,EAAAA,CAAC,CAACgC,QAAF,IAAciB,gBAAgB,CAAiBpE,EAAjB,EAAqB,UAArB,EAAiCmB,CAAC,CAACgC,QAAnC,CAA9B;AACAoB,EAAAA,MAAM,CAACC,IAAP,CAAYrD,CAAC,CAAC5B,UAAd,EAA0B2B,OAA1B,CAAkC,UAAA9B,IAAI;AACpCgF,IAAAA,gBAAgB,CAAkBpE,EAAlB,EAAsBZ,IAAtB,EAA4B+B,CAAC,CAAC5B,UAAF,CAAaH,IAAb,CAA5B,CAAhB;AACD,GAFD;AAGD;;AACD,SAASqF,SAAT;AACEH,EAAAA,GAAG,GAAG,KAAN;AACAvF,EAAAA,QAAQ,CAACmC,OAAT,CAAiBhB,QAAjB;AACD;;AACD,SAASc,eAAT;AACE,MAAI,CAACsD,GAAL,EAAU;AACRA,IAAAA,GAAG,GAAG,IAAN;AACAI,IAAAA,qBAAqB,CAACD,SAAD,CAArB;AACD;AACF;;;AAGD,SAASE,aAAT,CAAuBC,QAAvB,EAA2CjF,OAA3C;AACE,MAAIC,MAAM,GAA2C,IAArD;;AACA,MAAIgF,QAAQ,CAACC,IAAT,KAAkB,MAAtB,EAA8B;AAC5BjF,IAAAA,MAAM,GAAG8C,oBAAoB,CAAC/C,OAAD,CAA7B;AACD,GAFD,MAEO,IAAIiF,QAAQ,CAACC,IAAT,KAAkB,OAAtB,EAA+B;AACpCjF,IAAAA,MAAM,GAAG4D,qBAAqB,CAAC7D,OAAD,CAA9B;AACD,GAFM,MAEA,IAAIiF,QAAQ,CAACC,IAAT,KAAkB,WAAtB,EAAmC;AACxCjF,IAAAA,MAAM,GAAGmE,yBAAyB,CAACpE,OAAD,EAAUiF,QAAQ,CAACE,SAAnB,CAAlC;AACD,GAFM,MAEA,IAAIF,QAAQ,CAACC,IAAT,KAAkB,UAAtB,EAAkC;AACvCjF,IAAAA,MAAM,GAAGsD,wBAAwB,CAACvD,OAAD,CAAjC;AACD;;AACD,MAAI,CAACC,MAAL,EAAa;AACbA,EAAAA,MAAM,CAACX,SAAP,CAAiB8F,IAAjB,CAAsBH,QAAtB;AACAhF,EAAAA,MAAM,CAACO,cAAP,CAAsBP,MAAtB;AACD;;;AAGD,SAASoF,YAAT,CAAsBJ,QAAtB,EAA0C5E,EAA1C;AACE,MAAIJ,MAAM,GAA2C,IAArD;;AACA,MAAIgF,QAAQ,CAACC,IAAT,KAAkB,MAAtB,EAA8B;AAC5BjF,IAAAA,MAAM,GAAG8C,oBAAoB,CAAC1C,EAAD,CAA7B;AACD,GAFD,MAEO,IAAI4E,QAAQ,CAACC,IAAT,KAAkB,OAAtB,EAA+B;AACpCjF,IAAAA,MAAM,GAAG4D,qBAAqB,CAACxD,EAAD,CAA9B;AACD,GAFM,MAEA,IAAI4E,QAAQ,CAACC,IAAT,KAAkB,WAAtB,EAAmC;AACxCjF,IAAAA,MAAM,GAAGmE,yBAAyB,CAAC/D,EAAD,EAAK4E,QAAQ,CAACE,SAAd,CAAlC;AACD,GAFM,MAEA,IAAIF,QAAQ,CAACC,IAAT,KAAkB,UAAtB,EAAkC;AACvCjF,IAAAA,MAAM,GAAGsD,wBAAwB,CAAClD,EAAD,CAAjC;AACD;;AACD,MAAI,CAACJ,MAAL,EAAa;AACb,MAAMqF,KAAK,GAAGrF,MAAM,CAACX,SAAP,CAAiBiG,OAAjB,CAAyBN,QAAzB,CAAd;AACA,MAAIK,KAAK,KAAK,CAAC,CAAf,EAAkBrF,MAAM,CAACX,SAAP,CAAiBkG,MAAjB,CAAwBF,KAAxB,EAA+B,CAA/B;AAClBrF,EAAAA,MAAM,CAACO,cAAP,CAAsBP,MAAtB;AACD;;;AAGD,SAASwF,kBAAT,CAA4BR,QAA5B;AACE,MAAMS,gBAAgB,GAAG,IAAInG,GAAJ,CAAQ0F,QAAQ,CAAC7F,QAAjB,CAAzB;AACA,MAAMuG,WAAW,GAAiB,IAAIpG,GAAJ,EAAlC;AACA,MAAMqG,gBAAgB,GAAGtD,QAAQ,CAACuD,gBAAT,CAA0BZ,QAAQ,CAACa,QAAnC,CAAzB;AAEAF,EAAAA,gBAAgB,CAACrE,OAAjB,CAAyB,UAAAlB,EAAE;AACzBsF,IAAAA,WAAW,CAACI,GAAZ,CAAgB1F,EAAhB;;AACA,QAAI,CAACqF,gBAAgB,CAACM,GAAjB,CAAqB3F,EAArB,CAAL,EAA+B;AAC7B4E,MAAAA,QAAQ,CAAC7F,QAAT,CAAkB2G,GAAlB,CAAsB1F,EAAtB;AACA2E,MAAAA,aAAa,CAACC,QAAD,EAAW5E,EAAX,CAAb;AACD;AACF,GAND;AAQAqF,EAAAA,gBAAgB,CAACnE,OAAjB,CAAyB,UAAAlB,EAAE;AACzB,QAAI,CAACsF,WAAW,CAACK,GAAZ,CAAgB3F,EAAhB,CAAL,EAA0B;AACxB4E,MAAAA,QAAQ,CAAC7F,QAAT,WAAyBiB,EAAzB;AACAgF,MAAAA,YAAY,CAACJ,QAAD,EAAW5E,EAAX,CAAZ;AACD;AACF,GALD;AAMD;;AAED,SAAS4F,cAAT,CAAwBhB,QAAxB;AACEA,EAAAA,QAAQ,CAAC7F,QAAT,CAAkBmC,OAAlB,CAA0B,UAAAlB,EAAE;AAAA,WAAIgF,YAAY,CAACJ,QAAD,EAAW5E,EAAX,CAAhB;AAAA,GAA5B;AACA4E,EAAAA,QAAQ,CAAC7F,QAAT,CAAkB8G,KAAlB;AACA5G,EAAAA,SAAS,UAAT,CAAiB2F,QAAjB;AACD;;AAED,SAASkB,qBAAT;AACE7G,EAAAA,SAAS,CAACiC,OAAV,CAAkBkE,kBAAlB;AACD;;;AAGD,IAAI5E,QAAJ;SACgBuF;AACdvF,EAAAA,QAAQ,IAAIA,QAAQ,CAACyD,UAAT,EAAZ;AACD;SACe+B;AACd,MAAI,OAAO/D,QAAP,KAAoB,WAAxB,EAAqC;;AAErC,MAAI,CAACzB,QAAL,EAAe;AACbA,IAAAA,QAAQ,GAAG,IAAIC,gBAAJ,CAAqB;AAC9BqF,MAAAA,qBAAqB;AACtB,KAFU,CAAX;AAGD;;AAEDA,EAAAA,qBAAqB;AACrBtF,EAAAA,QAAQ,CAACE,OAAT,CAAiBuB,QAAQ,CAACgE,eAA1B,EAA2C;AACzC5G,IAAAA,SAAS,EAAE,IAD8B;AAEzCC,IAAAA,OAAO,EAAE,IAFgC;AAGzCC,IAAAA,UAAU,EAAE,KAH6B;AAIzCC,IAAAA,aAAa,EAAE;AAJ0B,GAA3C;AAMD;;AAGDwG,qBAAqB;;AAErB,SAASE,WAAT,CAAqB/E,CAArB;AACE;AACA,MAAI,OAAOc,QAAP,KAAoB,WAAxB,EAAqC,OAAOpD,cAAP;;AAErCI,EAAAA,SAAS,CAACyG,GAAV,CAAcvE,CAAd;;AAEAiE,EAAAA,kBAAkB,CAACjE,CAAD,CAAlB;AACA,SAAO;AACLrC,IAAAA,MAAM,EAAE;AACN8G,MAAAA,cAAc,CAACzE,CAAD,CAAd;AACD;AAHI,GAAP;AAKD;;AAED,SAASyB,IAAT,CACE6C,QADF,EAEErE,MAFF;AAIE,SAAO8E,WAAW,CAAC;AACjBrB,IAAAA,IAAI,EAAE,MADW;AAEjB9F,IAAAA,QAAQ,EAAE,IAAIG,GAAJ,EAFO;AAGjBkC,IAAAA,MAAM,EAANA,MAHiB;AAIjBqE,IAAAA,QAAQ,EAARA;AAJiB,GAAD,CAAlB;AAMD;;AAED,SAAStC,QAAT,CACEsC,QADF,EAEErE,MAFF;AAIE,SAAO8E,WAAW,CAAC;AACjBrB,IAAAA,IAAI,EAAE,UADW;AAEjB9F,IAAAA,QAAQ,EAAE,IAAIG,GAAJ,EAFO;AAGjBkC,IAAAA,MAAM,EAANA,MAHiB;AAIjBqE,IAAAA,QAAQ,EAARA;AAJiB,GAAD,CAAlB;AAMD;;AAED,SAAShC,OAAT,CACEgC,QADF,EAEErE,MAFF;AAIE,SAAO8E,WAAW,CAAC;AACjBrB,IAAAA,IAAI,EAAE,OADW;AAEjB9F,IAAAA,QAAQ,EAAE,IAAIG,GAAJ,EAFO;AAGjBkC,IAAAA,MAAM,EAANA,MAHiB;AAIjBqE,IAAAA,QAAQ,EAARA;AAJiB,GAAD,CAAlB;AAMD;;AAED,SAASX,SAAT,CACEW,QADF,EAEEX,SAFF,EAGE1D,MAHF;AAKE,MAAI,CAACxC,kBAAkB,CAACuH,IAAnB,CAAwBrB,SAAxB,CAAL,EAAyC,OAAOjG,cAAP;;AAEzC,MAAIiG,SAAS,KAAK,OAAd,IAAyBA,SAAS,KAAK,WAA3C,EAAwD;AACtD,WAAOrB,OAAO,CAACgC,QAAD,EAAW,UAAAW,UAAU;AACjC,UAAMC,iBAAiB,GAAGjF,MAAM,CAACM,KAAK,CAACC,IAAN,CAAWyE,UAAX,EAAuBxE,IAAvB,CAA4B,GAA5B,CAAD,CAAhC;AACAwE,MAAAA,UAAU,CAACP,KAAX;AACA,UAAI,CAACQ,iBAAL,EAAwB;AACxBA,MAAAA,iBAAiB,CACd9E,KADH,CACS,MADT,EAEGC,MAFH,CAEUC,OAFV,EAGGP,OAHH,CAGW,UAAAoF,CAAC;AAAA,eAAIF,UAAU,CAACV,GAAX,CAAeY,CAAf,CAAJ;AAAA,OAHZ;AAID,KARa,CAAd;AASD;;AAED,SAAOJ,WAAW,CAAC;AACjBrB,IAAAA,IAAI,EAAE,WADW;AAEjBC,IAAAA,SAAS,EAATA,SAFiB;AAGjB/F,IAAAA,QAAQ,EAAE,IAAIG,GAAJ,EAHO;AAIjBkC,IAAAA,MAAM,EAANA,MAJiB;AAKjBqE,IAAAA,QAAQ,EAARA;AALiB,GAAD,CAAlB;AAOD;;AAED,SAASc,WAAT;MACEd,iBAAAA;MACAe,eAAAA;MACA/D,cAAAA;MACWrD,aAAX0F;MACA/C,uBAAAA;MACAC,6BAAAA;;AAEA,MAAI5C,IAAI,KAAK,MAAb,EAAqB;AACnB,QAAIoH,MAAM,KAAK,QAAf,EAAyB;AACvB,aAAO5D,IAAI,CAAC6C,QAAD,EAAW,UAAA7E,GAAG;AAAA,eAAIA,GAAG,IAAI6B,KAAJ,WAAIA,KAAJ,GAAa,EAAb,CAAP;AAAA,OAAd,CAAX;AACD,KAFD,MAEO,IAAI+D,MAAM,KAAK,KAAf,EAAsB;AAC3B,aAAO5D,IAAI,CAAC6C,QAAD,EAAW;AAAA,eAAMhD,KAAN,WAAMA,KAAN,GAAe,EAAf;AAAA,OAAX,CAAX;AACD;AACF,GAND,MAMO,IAAIrD,IAAI,KAAK,OAAb,EAAsB;AAC3B,QAAIoH,MAAM,KAAK,QAAf,EAAyB;AACvB,aAAO/C,OAAO,CAACgC,QAAD,EAAW,UAAA7E,GAAG;AAC1B,YAAI6B,KAAJ,EAAW7B,GAAG,CAAC8E,GAAJ,CAAQjD,KAAR;AACZ,OAFa,CAAd;AAGD,KAJD,MAIO,IAAI+D,MAAM,KAAK,QAAf,EAAyB;AAC9B,aAAO/C,OAAO,CAACgC,QAAD,EAAW,UAAA7E,GAAG;AAC1B,YAAI6B,KAAJ,EAAW7B,GAAG,UAAH,CAAW6B,KAAX;AACZ,OAFa,CAAd;AAGD,KAJM,MAIA,IAAI+D,MAAM,KAAK,KAAf,EAAsB;AAC3B,aAAO/C,OAAO,CAACgC,QAAD,EAAW,UAAA7E,GAAG;AAC1BA,QAAAA,GAAG,CAACiF,KAAJ;AACA,YAAIpD,KAAJ,EAAW7B,GAAG,CAAC8E,GAAJ,CAAQjD,KAAR;AACZ,OAHa,CAAd;AAID;AACF,GAfM,MAeA,IAAIrD,IAAI,KAAK,UAAb,EAAyB;AAC9B,QAAIoH,MAAM,KAAK,KAAX,IAAoBzE,cAAxB,EAAwC;AACtC,aAAOoB,QAAQ,CAACsC,QAAD,EAAW;AAAA,eAAO;AAC/BzD,UAAAA,oBAAoB,EAApBA,oBAD+B;AAE/BD,UAAAA,cAAc,EAAdA;AAF+B,SAAP;AAAA,OAAX,CAAf;AAID;AACF,GAPM,MAOA;AACL,QAAIyE,MAAM,KAAK,QAAf,EAAyB;AACvB,aAAO1B,SAAS,CAACW,QAAD,EAAWrG,IAAX,EAAiB,UAAAwB,GAAG;AAAA,eAClCA,GAAG,KAAK,IAAR,GAAeA,GAAG,IAAI6B,KAAJ,WAAIA,KAAJ,GAAa,EAAb,CAAlB,GAAqCA,KAArC,WAAqCA,KAArC,GAA8C,EADZ;AAAA,OAApB,CAAhB;AAGD,KAJD,MAIO,IAAI+D,MAAM,KAAK,KAAf,EAAsB;AAC3B,aAAO1B,SAAS,CAACW,QAAD,EAAWrG,IAAX,EAAiB;AAAA,eAAMqD,KAAN,WAAMA,KAAN,GAAe,EAAf;AAAA,OAAjB,CAAhB;AACD,KAFM,MAEA,IAAI+D,MAAM,KAAK,QAAf,EAAyB;AAC9B,aAAO1B,SAAS,CAACW,QAAD,EAAWrG,IAAX,EAAiB;AAAA,eAAM,IAAN;AAAA,OAAjB,CAAhB;AACD;AACF;;AACD,SAAOP,cAAP;AACD;;AAeD,YAAe;AACb+D,EAAAA,IAAI,EAAJA,IADa;AAEba,EAAAA,OAAO,EAAPA,OAFa;AAGbqB,EAAAA,SAAS,EAATA,SAHa;AAIb3B,EAAAA,QAAQ,EAARA,QAJa;AAKboD,EAAAA,WAAW,EAAXA;AALa,CAAf;;;;;;;"}